"""
Comparison of API vs Local Calculator Results
"""

def format_value(val):
    if isinstance(val, float):
        return f"{val:.6f}"
    return str(val)

def write_comparison(case_name, params, api_result, local_result):
    output = []
    output.append("="*80)
    output.append(f"Test Case: {case_name}")
    output.append(f"Parameters:")
    for k, v in params.items():
        output.append(f"  {k}: {v}")
    output.append("="*80)
    
    output.append("\nResults Comparison:")
    output.append(f"{'Field':<25} {'API Value':<20} {'Local Value':<20} {'Diff %':<10}")
    output.append("-"*75)
    
    all_fields = sorted(set(api_result.keys()) | set(local_result.keys()))
    for field in all_fields:
        api_val = api_result.get(field, "N/A")
        local_val = local_result.get(field, "N/A")
        
        if isinstance(api_val, (int, float)) and isinstance(local_val, (int, float)):
            max_val = max(abs(float(api_val)), abs(float(local_val)))
            if max_val > 0:
                diff_pct = abs(float(api_val) - float(local_val)) / max_val * 100
                diff_str = f"{diff_pct:.1f}%"
            else:
                diff_str = "0%"
        else:
            diff_str = "N/A"
            
        output.append(f"{field:<25} {format_value(api_val):<20} {format_value(local_val):<20} {diff_str:<10}")
    
    output.append("\nAnalysis:")
    for field in ["D1", "h2", "h3"]:
        if field in api_result and field in local_result:
            api_val = float(api_result[field])
            local_val = float(local_result[field])
            if abs(api_val - local_val) > 0.001:
                output.append(f"- {field}: Significant difference detected")
                output.append(f"  API calculation: {api_val}")
                output.append(f"  Local calculation: {local_val}")
    
    return "\n".join(output) + "\n\n"
